@model TDTU_IT_alumni_management_system.Models.News

@{
    ViewBag.Title = "Chỉnh sửa tin tức";
    Layout = "~/Areas/Admin/Views/Shared/LayoutAdmin.cshtml";
}
<div id="errorModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Lỗi</h4>
            </div>
            <div class="modal-body">
                @if (TempData["ErrorMessage"] != null)
                {
                    <p>@TempData["ErrorMessage"]</p>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        <h2>Chỉnh sửa tin tức</h2>
        @using (Html.BeginForm("Edit", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>News</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.IDNews)

                <div class="form-group">
                    @Html.Label("Tiêu đề", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        <div id="wordCountTitle" class="text-danger"></div>
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                 <div class="form-group">
                     @Html.Label("Mô tả", htmlAttributes: new { @class = "control-label col-md-1" })
                     <div class="col-md-10">
                         @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @required = true, @maxlength = "250" })
                         <div id="wordCountDescription" class="text-danger"></div>
                         @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                     </div>
                 </div>
                  <div class="form-group">
                      @Html.Label("Nội dung", htmlAttributes: new { @class = "control-label col-md-1" })
                      <div class="col-md-10">
                          @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", @required = true } })
                          @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                      </div>
                  </div>

                <div class="form-group">
                    @Html.Label("Hình ảnh", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-5">
                         @if (!string.IsNullOrEmpty(Model.ImgNews))
                          {
                                 <!-- Nếu có hình ảnh được tải lên trước đó, hiển thị nút chỉnh sửa hình ảnh -->
                                 <button type="button" id="btnChangeImage" class="btn btn-default">Chỉnh sửa </button>
                                 <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" style="display: none;" />
                                 <img id="imgPreview" src="~/Upload/images/News/@Model.ImgNews" width="100px" />
                          }
                          else
                          {
                                <!-- Nếu không có hình ảnh được tải lên trước đó, hiển thị input file để tải lên hình ảnh mới -->
                                <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" />
                          }
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Đường dẫn", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @{
                                bool hide = (Model.hide.GetValueOrDefault(false) ? true : false);
                            }
                            @Html.CheckBoxFor(model => hide)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        <div class="btn btn-secondary">
                            <a href="/quan-ly/tin-tuc">Trở về</a>
                        </div>
                    </div>
                </div>
            </div>
        }
        </div>
    </div>

@section _Footer
{
        <script src="~/Areas/Admin/Content/ckeditor/ckeditor.js"></script>
        <script type="text/javascript">

        CKEDITOR.replace("Content", {
            height: '400px',
            customConfig: '/Areas/Admin/Content/ckeditor/config.js'
        });
        function removeDiacritics(str) {
            return str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
        }

        $("#Title").keyup(function () {
            var text = $(this).val().toLowerCase();
            var textWithoutDiacritics = removeDiacritics(text);
            var text_create = textWithoutDiacritics.replace(/\s+/g, '-').replace(/[-]+/g, '-').replace(/[^a-z0-9\-]/g, '');
            $('#meta').val(text_create);
        }).keyup();
        window.onload = active();
        function active() {

            if (document.getElementById("nav-news").className == "") {
                document.getElementById("nav-news").className = "active";
            }
        }

        $(document).ready(function () {
            $('#Description').on('input', function () {
                var words = this.value.match(/\S+/g).length;
                if (words > 50) {
                    var trimmed = $(this).val().split(/\s+/, 50).join(" ");
                    $(this).val(trimmed + " ...");
                    $('#wordCountDescription').text("Chỉ được nhập tối đa 50 từ.");
                } else {
                    $('#wordCountDescription').text('Số từ: ' + words + '/50');
                }
            });
        });

        $(document).ready(function () {
            $('#Title').on('input', function () {
                var words = this.value.match(/\S+/g).length;
                if (words > 25) {
                    var trimmed = $(this).val().split(/\s+/, 25).join(" ");
                    $(this).val(trimmed + " ...");
                    $('#wordCountTitle').text("Chỉ được nhập tối đa 25 từ.");
                } else {
                    $('#wordCountTitle').text('Số từ: ' + words + '/25');
                }
            });
        });
        $(document).ready(function () {
            // Kiểm tra nếu có thông báo lỗi, hiển thị modal
            @if (TempData["ErrorMessage"] != null)
            {
                @:$('#errorModal').modal('show');
            }

        });
            $(document).ready(function () {
                // Khi người dùng click vào nút chỉnh sửa hình ảnh
                $('#btnChangeImage').click(function () {
                    // Hiển thị input file để người dùng có thể tải lên hình ảnh mới
                    $('#img').show();
                    // Ẩn nút chỉnh sửa hình ảnh
                    $(this).hide();
                    // Ẩn hình ảnh hiện tại
                    $('#imgPreview').hide();
                });
            });
        </script>
 }

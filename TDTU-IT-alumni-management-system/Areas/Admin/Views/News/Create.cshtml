@model TDTU_IT_alumni_management_system.Models.News

@{
    ViewBag.Title = "Tạo tin tức";
    Layout = "~/Areas/Admin/Views/Shared/LayoutAdmin.cshtml";
}
@section _Header
{
    <style>
        textarea {
            width: 770px;
            height: 150px
        }
    </style>
}
<!-- Modal hiển thị thông báo lỗi -->
<div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="errorModalLabel">Lỗi</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Hiển thị thông báo lỗi -->
                <p>@TempData["ErrorMessage"]</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        <h2>Tạo tin tức</h2>
        @using (Html.BeginForm("Create", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.Label("Tiêu đề", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @required = true, @maxlength = "250" } })
                        <div id="wordCountTitle" class="text-danger"></div>
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Mô tả", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @required = true, @maxlength = "250" })
                        <div id="wordCountDescription" class="text-danger"></div>
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Nội dung", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", @required = true } })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Ảnh bìa", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" />
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Meta", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @{
                                bool hide = true;
                            }
                            @Html.CheckBoxFor(model => hide, new { style = "margin: -1px 5px" })
                            @Html.ValidationMessageFor(model => model.hide, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        <input type="submit" value="Tạo Tin" class="btn btn-primary" />
                        <div class="btn btn-secondary">
                            <a href="/quan-ly/tin-tuc">Trở về</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section _Footer
{
    <script src="~/Areas/Admin/Content/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">

        CKEDITOR.replace("Content", {
            height: '400px',
            customConfig: '/Areas/Admin/Content/ckeditor/config.js'
        });    
        function removeDiacritics(str) {
            return str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
        }

        $("#Title").keyup(function () {
            var text = $(this).val().toLowerCase();
            var textWithoutDiacritics = removeDiacritics(text);
            var text_create = textWithoutDiacritics.replace(/\s+/g, '-').replace(/[^a-z0-9\-]/g, '');
            $('#meta').val(text_create);
        }).keyup();

        window.onload = active();
        function active() {

            if (document.getElementById("nav-news").className == "") {
                document.getElementById("nav-news").className = "active";
            }
        }

        $(document).ready(function () {
            $('#Description').on('input', function () {
                var words = this.value.match(/\S+/g).length;
                if (words > 50) {
                    var trimmed = $(this).val().split(/\s+/, 50).join(" ");
                    $(this).val(trimmed + " ...");
                    $('#wordCountDescription').text("Chỉ được nhập tối đa 50 từ.");
                } else {
                    $('#wordCountDescription').text('Số từ: ' + words + '/50');
                }
            });
        });

        $(document).ready(function () {
            $('#Title').on('input', function () {
                var words = this.value.match(/\S+/g).length;
                if (words > 50) {
                    var trimmed = $(this).val().split(/\s+/, 50).join(" ");
                    $(this).val(trimmed + " ...");
                    $('#wordCountTitle').text("Chỉ được nhập tối đa 50 từ.");
                } else {
                    $('#wordCountTitle').text('Số từ: ' + words + '/50');
                }
            });
        });
        $(document).ready(function () {
            // Kiểm tra nếu có thông báo lỗi, hiển thị modal
            @if (TempData["ErrorMessage"] != null)
            {
                @:$('#errorModal').modal('show');
            }

        });

        // Kiểm tra nếu có dữ liệu trong TempData, khôi phục và hiển thị trên form
        $(document).ready(function () {
            var formData = @Html.Raw(Json.Encode(TempData["FormData"]));
            if (formData) {
                $('#Title').val(formData.Title);
                $('#Description').val(formData.Description);
                if (CKEDITOR.instances['Content']) {
                    CKEDITOR.instances['Content'].setData(formData.Content);
                } else {
                    // Nếu CKEditor chưa được khởi tạo, bạn có thể sử dụng jQuery để đặt dữ liệu trực tiếp vào trường
                    $('#Content').val(formData.Content);
                }
                $('#meta').val(formData.meta);
            }
        });
    </script>
}

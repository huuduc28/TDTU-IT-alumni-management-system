//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TDTU_IT_alumni_management_system.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TDTUAlumnisManagementSystemEntities : DbContext
    {
        public TDTUAlumnisManagementSystemEntities()
            : base("name=TDTUAlumnisManagementSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Alumnus> Alumni { get; set; }
        public virtual DbSet<Banner> Banners { get; set; }
        public virtual DbSet<ChatBot> ChatBots { get; set; }
        public virtual DbSet<Enterprise> Enterprises { get; set; }
        public virtual DbSet<GraduationInfo> GraduationInfoes { get; set; }
        public virtual DbSet<Header> Headers { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<Notify> Notifies { get; set; }
        public virtual DbSet<RecruitmentNew> RecruitmentNews { get; set; }
        public virtual DbSet<TaiKhoan> TaiKhoans { get; set; }
    
        public virtual int CheckAccessRights(string username, string tableName, ObjectParameter accessGranted)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckAccessRights", usernameParameter, tableNameParameter, accessGranted);
        }
    
        public virtual ObjectResult<GetAllDataNotifi_Result> GetAllDataNotifi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDataNotifi_Result>("GetAllDataNotifi");
        }
    }
}
